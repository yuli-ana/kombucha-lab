{"version":3,"sources":["fonts/Lato-Light.ttf","components/modal/ModalItem.js","components/modal/ModalList.js","components/modal/TotalPrice.js","components/modal/CompleteOrder.js","components/header/FixedBar.js","components/header/Header.js","components/catalogue/Main.js","components/catalogue/CatalogueList.js","components/firebase.js","components/catalogue/CatalogueItem.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ModalItem","name","price","currentIdCount","image","className","src","alt","icon","faMinus","faPlus","ModalList","children","cartCounter","TotalPrice","modalCarts","count","total","reduce","acc","currentItem","id","CompleteOrder","href","target","rel","FixedBar","handleCartClick","setState","activeModal","handleClick","state","onClick","this","faShoppingCart","props","faTimes","value","find","item","push","map","i","key","Component","Header","text","Main","List","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","CatalogueItem","updateCount","itemCounter","Footer","faGithub","faLinkedin","faTwitter","App","findId","firebaseData","currentCount","modalItems","database","ref","on","response","data","val","newState","CatalogueList","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c11ada8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Lato-Light.2fe27d9d.ttf\";","import React, { Fragment } from 'react';\nimport { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\n\nconst ModalItem = ({ name, price, currentIdCount, image }) => {\n    return (\n        <Fragment>\n            <li className='row cart-item'>\n                <div className='col-40 cart-item-image'>\n                    <img\n                        src={image}\n                        alt=\"name\"\n                    />\n                </div>\n                <div className='row cart-item-info col-60'>\n                    <h3 className='col-auto'>{name}</h3>\n                    <p className='col-auto item-info-price'>${price}.00</p>\n                    <div className=\"row cart-update-count\">\n                        <div className=\"row col-auto\">\n                            <button\n                                className='btn btn-cart-icon col-auto'>\n                                <FontAwesomeIcon\n                                    className='icon'\n                                    icon={faMinus} />\n                            </button>\n                            <span className='cart-item-count col-auto'>{currentIdCount}</span>\n                            <button\n                                className='btn btn-cart-icon col-auto'>\n                                <FontAwesomeIcon\n                                    className='icon'\n                                    icon={faPlus} />\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </li>\n        </Fragment>\n    )\n}\n\nexport default ModalItem;","import React from 'react';\n\nconst ModalList = ({children, cartCounter}) => {\n    return (\n        <ul>\n            <h2 className=\"modal-list-title\">Shopping cart: {cartCounter > 1 ? (`${cartCounter} item(s)`) : (`${cartCounter} item`)}</h2>\n            {children}\n        </ul>\n    )\n}\n\nexport default ModalList;","import React from 'react';\n\n// First value will be undefined because user hasn't chosen any item yet that's why assigned fallback value []\nconst TotalPrice = ({ modalCarts = [], count }) => {\n    const total = modalCarts.reduce((acc, currentItem) => {\n        // Multiply the currentItem with count \n        const multiplication = currentItem.price * count[currentItem.id];\n        return acc + multiplication;\n    }, 0)\n\n    return (\n        <span className='modal-total'>\n            Your total is {total}.00 CAD\n        </span>\n    )\n}\n\nexport default TotalPrice;\n","import React from 'react';\nimport TotalPrice from '../modal/TotalPrice';\n\n\nconst CompleteOrder = ({ modalCarts, count }) => {\n    return (\n        <div className='modal-order'>\n            <TotalPrice\n                count={count}\n                modalCarts={modalCarts}\n            />\n            <a\n                className='btn-order'\n                href='https://www.villagejuicery.com/collections/kombucha'\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >BUY</a>\n        </div>\n    )\n}\n\nexport default CompleteOrder;","import React, { Component, Fragment } from 'react';\nimport { faShoppingCart, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ModalItem from '../modal/ModalItem'\nimport ModalList from '../modal/ModalList';\nimport CompleteOrder from '../modal/CompleteOrder';\n// import TotalPrice from '../modal/TotalPrice';\n\nclass FixedBar extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            activeModal: false,\n        }\n    }\n\n    // Update to true when ModalCart is open\n    handleCartClick = () => {\n        this.setState({\n            activeModal: true,\n        })\n    }\n\n    // Update to false when modal is closed\n    handleClick = () => {\n        this.setState({\n            activeModal: false,\n        })\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <div className='fixed-bar'>\n                    <button\n                        onClick={this.handleCartClick}\n                        className='btn btn-cart'>\n                        <FontAwesomeIcon\n                            className='icon'\n                            icon={faShoppingCart} />\n                        {this.props.cartCounter}\n                    </button>\n\n                    <div\n                        className={`modal ${this.state.activeModal ? 'open-modal' : 'modal'}`}>\n                        <div\n                            className={this.state.activeModal ? 'add-overlay' : 'remove-overlay'}>\n                        </div>\n                        <button\n                            onClick={this.handleClick}\n                            className='btn btn-close'>\n                            <FontAwesomeIcon\n                                icon={faTimes} />\n                        </button>\n                        <ModalList cartCounter={this.props.cartCounter}>\n                            {(this.props.modalCarts || [])\n                                .reduce((acc, value) => {\n\n                                    if (!acc.find(item => item.id === value.id)) {\n                                        acc.push(value);\n                                    }\n                                    return acc;\n\n                                }, [])\n                                .map((item, i) => {\n                                    return (\n                                        <ModalItem\n                                            key={i}\n                                            name={item.name}\n                                            price={item.price}\n                                            currentIdCount={this.props.count[item.id]}\n                                            image={item.image}\n                                        />\n                                    )\n                                })\n                            }\n                        </ModalList>\n                        <CompleteOrder modalCarts={this.props.modalCarts} count={this.props.count} />\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default FixedBar;\n","import React, { Fragment } from 'react';\nimport FixedBar from './FixedBar';\n\n\n\nconst Header = () => {\n    return (\n        <Fragment>\n            <header className='header'>\n                <div\n                    className='wrapper'>\n                    <FixedBar\n                        text='buy'/>\n                    <div className='header-title col-auto'>\n                        <h1>Kombucha Lab</h1>\n                    </div>\n                </div>\n            </header>\n        </Fragment>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nconst Main = ({ children }) => {\n    return (\n        <main>\n            <div className=\"wrapper\">\n                <div className='row row--center'>\n                    <section className='section'>\n                        {children}\n                    </section>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default Main;","import React from 'react';\n\n\nconst List = ({ children }) => {\n    return (\n        <ul className='row'>\n            {children}\n        </ul>\n    )\n}\n\nexport default List;","import firebase from 'firebase/app';\nimport 'firebase/database';\n\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD73GGG-hzzPQqu1xUqCyrSzeFxGSEvUNI\",\n  authDomain: \"kombucha-lab.firebaseapp.com\",\n  databaseURL: \"https://kombucha-lab.firebaseio.com\",\n  projectId: \"kombucha-lab\",\n  storageBucket: \"kombucha-lab.appspot.com\",\n  messagingSenderId: \"927556905744\",\n  appId: \"1:927556905744:web:0ba35bb412dfd209e05395\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n\nexport default firebase;","import React from 'react';\n\nconst CatalogueItem = ({ image, name, price, updateCount, itemCounter }) => {\n    return (\n        <li\n            className='col-33 catalogue-item'>\n            <img src={image} alt={name} />\n            <div className='item-details'>\n                <h2 className='item-title'>{name}</h2>\n                <p className='item-price'>${price}.00</p>\n            </div>\n            <div className='row row--column'>\n                <span className='item-counter'>{itemCounter}</span>\n                <button\n                    onClick={updateCount}\n                    className='btn-add'>Add to cart\n                    </button>\n            </div>\n        </li>\n    )\n\n}\n\n\nexport default CatalogueItem;","import React from 'react';\nimport { faGithub, faLinkedin, faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Footer = () => {\n    return (\n        <footer className='footer'>\n            <div className=\"wrapper\">\n                <div>\n                    <p>\n                        All product design and images credited to\n                        <a\n                            className=\"footer-juicery\"\n                            href=\"https://www.villagejuicery.com/\"\n                            target=\"_blanc\"\n                            rel=\"noopener noreferrer\">Village Juicery\n                        </a>\n                    </p>\n                    <p>Built by Yuliana Hazda, 2020</p>\n                </div>\n                <ul className=\"row row--center\">\n                    <li className=\"col-auto\">\n                        <a\n                            className=\"footer-icon\"\n                            href=\"https://github.com/yuli-ana\"\n                            target=\"_blanc\"\n                            rel=\"noopener noreferrer\">\n                            <FontAwesomeIcon icon={faGithub} />\n                        </a>\n                    </li>\n                    <li className=\"col-auto\">\n                        <a\n                            className=\"footer-icon\"\n                            href=\"https://www.linkedin.com/in/yuliana-hazda-b0ab711a8/\"\n                            target=\"_blanc\"\n                            rel=\"noopener noreferrer\">\n                            <FontAwesomeIcon icon={faLinkedin} /></a></li>\n                    <li className=\"col-auto\">\n                        <a\n                            className=\"footer-icon\"\n                            href=\"https://twitter.com/yulianahazda\"\n                            target=\"_blanc\"\n                            rel=\"noopener noreferrer\">\n                            <FontAwesomeIcon icon={faTwitter} />\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer;","import React, { Component, Fragment } from 'react';\nimport Header from './components/header/Header';\nimport Main from './components/catalogue/Main';\nimport CatalogueList from './components/catalogue/CatalogueList';\nimport FixedBar from './components/header/FixedBar';\nimport firebase from './components/firebase';\nimport CatalogueItem from './components/catalogue/CatalogueItem';\nimport Footer from './Footer';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n\n    this.state = {\n\n      firebaseData: [],\n      // Store id property of each cart with individual counter value\n      count: {},\n      cartCounter: 0,\n      // Add selected cart\n      modalItems: [\n      ],\n    }\n  }\n\n\n  // Get data from Firebase database\n  componentDidMount() {\n    const dbRef = firebase.database().ref();\n\n    dbRef.on('value', (response) => {\n      const data = response.val();\n\n      const newState = [];\n\n      for (let item in data) {\n        newState.push(data[item]);\n      }\n\n      this.setState({\n        firebaseData: newState,\n      })\n    })\n  }\n\n  // Event handler for cart click\n  handleClick = (id) => {\n\n    // Find if clicked cart ID matches product ID in 'firebaseData' object\n    const findId = this.state.firebaseData.find(item => item.id === id);\n\n    // Store a new property (in 'count' object) as matching item ID or '0' \n    let currentCount = this.state.count[findId.id] || 0;\n\n    // Update state\n    this.setState({\n      // Spread old value and add new value (ID), map over modalCarts to render carts in a 'ModalList'\n      modalItems: [\n        ...this.state.modalItems, findId,\n      ],\n\n      // Spread old id value and update matching id value on click\n      count: {\n        ...this.state.count,\n        [findId.id]: currentCount + 1,\n      },\n\n      // Update item count in cart\n      cartCounter: this.state.cartCounter + 1,\n    })\n  }\n\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"overflow-hidden\">\n          <Header />\n          <FixedBar\n            cartCounter={this.state.cartCounter}\n            count={this.state.count}\n            modalCarts={this.state.modalItems} />\n          <Main>\n            <CatalogueList>\n              {this.state.firebaseData\n                .map(item => {\n                  return (\n                    <CatalogueItem\n                      key={item.id}\n                      id={item.id}\n                      name={item.name}\n                      price={item.price}\n                      image={item.image}\n                      updateCount={() => this.handleClick(item.id)}\n                      itemCounter={this.state.count[item.id] || 0}\n                    />\n                  )\n                })}\n            </CatalogueList>\n          </Main>\n        </div>\n        <Footer />\n      </Fragment>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// Added new font\nimport './fonts/Lato-Light.ttf'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}